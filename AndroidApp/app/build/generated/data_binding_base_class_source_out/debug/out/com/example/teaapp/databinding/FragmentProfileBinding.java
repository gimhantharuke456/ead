// Generated by view binder compiler. Do not edit!
package com.example.teaapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.teaapp.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText dobEditText;

  @NonNull
  public final TextInputLayout dobInputLayout;

  @NonNull
  public final TextInputEditText emailEditText;

  @NonNull
  public final TextInputLayout emailInputLayout;

  @NonNull
  public final AutoCompleteTextView genderAutoCompleteTextView;

  @NonNull
  public final TextInputLayout genderInputLayout;

  @NonNull
  public final ProgressBar loadingProgressBar;

  @NonNull
  public final Button logoutButton;

  @NonNull
  public final Button myOrdersButton;

  @NonNull
  public final TextInputEditText nameEditText;

  @NonNull
  public final TextInputLayout nameInputLayout;

  @NonNull
  public final TextView nameTextView;

  @NonNull
  public final TextInputEditText phoneEditText;

  @NonNull
  public final TextInputLayout phoneInputLayout;

  @NonNull
  public final TextView titleTextView;

  @NonNull
  public final Button updateProfileButton;

  private FragmentProfileBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText dobEditText, @NonNull TextInputLayout dobInputLayout,
      @NonNull TextInputEditText emailEditText, @NonNull TextInputLayout emailInputLayout,
      @NonNull AutoCompleteTextView genderAutoCompleteTextView,
      @NonNull TextInputLayout genderInputLayout, @NonNull ProgressBar loadingProgressBar,
      @NonNull Button logoutButton, @NonNull Button myOrdersButton,
      @NonNull TextInputEditText nameEditText, @NonNull TextInputLayout nameInputLayout,
      @NonNull TextView nameTextView, @NonNull TextInputEditText phoneEditText,
      @NonNull TextInputLayout phoneInputLayout, @NonNull TextView titleTextView,
      @NonNull Button updateProfileButton) {
    this.rootView = rootView;
    this.dobEditText = dobEditText;
    this.dobInputLayout = dobInputLayout;
    this.emailEditText = emailEditText;
    this.emailInputLayout = emailInputLayout;
    this.genderAutoCompleteTextView = genderAutoCompleteTextView;
    this.genderInputLayout = genderInputLayout;
    this.loadingProgressBar = loadingProgressBar;
    this.logoutButton = logoutButton;
    this.myOrdersButton = myOrdersButton;
    this.nameEditText = nameEditText;
    this.nameInputLayout = nameInputLayout;
    this.nameTextView = nameTextView;
    this.phoneEditText = phoneEditText;
    this.phoneInputLayout = phoneInputLayout;
    this.titleTextView = titleTextView;
    this.updateProfileButton = updateProfileButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dobEditText;
      TextInputEditText dobEditText = ViewBindings.findChildViewById(rootView, id);
      if (dobEditText == null) {
        break missingId;
      }

      id = R.id.dobInputLayout;
      TextInputLayout dobInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (dobInputLayout == null) {
        break missingId;
      }

      id = R.id.emailEditText;
      TextInputEditText emailEditText = ViewBindings.findChildViewById(rootView, id);
      if (emailEditText == null) {
        break missingId;
      }

      id = R.id.emailInputLayout;
      TextInputLayout emailInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (emailInputLayout == null) {
        break missingId;
      }

      id = R.id.genderAutoCompleteTextView;
      AutoCompleteTextView genderAutoCompleteTextView = ViewBindings.findChildViewById(rootView, id);
      if (genderAutoCompleteTextView == null) {
        break missingId;
      }

      id = R.id.genderInputLayout;
      TextInputLayout genderInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (genderInputLayout == null) {
        break missingId;
      }

      id = R.id.loadingProgressBar;
      ProgressBar loadingProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (loadingProgressBar == null) {
        break missingId;
      }

      id = R.id.logoutButton;
      Button logoutButton = ViewBindings.findChildViewById(rootView, id);
      if (logoutButton == null) {
        break missingId;
      }

      id = R.id.myOrdersButton;
      Button myOrdersButton = ViewBindings.findChildViewById(rootView, id);
      if (myOrdersButton == null) {
        break missingId;
      }

      id = R.id.nameEditText;
      TextInputEditText nameEditText = ViewBindings.findChildViewById(rootView, id);
      if (nameEditText == null) {
        break missingId;
      }

      id = R.id.nameInputLayout;
      TextInputLayout nameInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (nameInputLayout == null) {
        break missingId;
      }

      id = R.id.nameTextView;
      TextView nameTextView = ViewBindings.findChildViewById(rootView, id);
      if (nameTextView == null) {
        break missingId;
      }

      id = R.id.phoneEditText;
      TextInputEditText phoneEditText = ViewBindings.findChildViewById(rootView, id);
      if (phoneEditText == null) {
        break missingId;
      }

      id = R.id.phoneInputLayout;
      TextInputLayout phoneInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (phoneInputLayout == null) {
        break missingId;
      }

      id = R.id.titleTextView;
      TextView titleTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleTextView == null) {
        break missingId;
      }

      id = R.id.updateProfileButton;
      Button updateProfileButton = ViewBindings.findChildViewById(rootView, id);
      if (updateProfileButton == null) {
        break missingId;
      }

      return new FragmentProfileBinding((ConstraintLayout) rootView, dobEditText, dobInputLayout,
          emailEditText, emailInputLayout, genderAutoCompleteTextView, genderInputLayout,
          loadingProgressBar, logoutButton, myOrdersButton, nameEditText, nameInputLayout,
          nameTextView, phoneEditText, phoneInputLayout, titleTextView, updateProfileButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
